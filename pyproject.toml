# Temperature Display App - Python Project Configuration
# Centralized configuration for all Python development tools

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "temperature-display-app"
version = "0.1.0"
description = "A FastAPI-based temperature display application with Docker deployment"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Temperature Display App Team"},
]
keywords = ["fastapi", "weather", "temperature", "docker", "postgresql"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]

dependencies = [
    "fastapi[all]>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy[asyncio]>=2.0.23",
    "asyncpg>=0.29.0",
    "alembic>=1.13.1",
    "redis>=5.0.1",
    "httpx>=0.25.2",
    "requests>=2.31.0",
    "pydantic>=2.5.0",
    "structlog>=23.2.0",
    "python-dotenv>=1.0.0",
    "gunicorn>=21.2.0",
    "python-multipart>=0.0.6",
    "cryptography>=41.0.8",
    "slowapi>=0.1.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "docker>=6.1.3",
    "black>=23.11.0",
    "mypy>=1.7.1",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
    "watchdog>=3.0.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "docker>=6.1.3",
]

[project.urls]
Homepage = "https://github.com/temperature-display-app/temperature-display-app"
Documentation = "https://github.com/temperature-display-app/temperature-display-app/docs"
Repository = "https://github.com/temperature-display-app/temperature-display-app"
"Bug Tracker" = "https://github.com/temperature-display-app/temperature-display-app/issues"

# ====================================================================
# Black Configuration - Python Code Formatter
# ====================================================================
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    # Directories to exclude
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | alembic/versions
)/
'''

# ====================================================================
# isort Configuration - Import Sorter
# ====================================================================
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["app", "tests"]
known_third_party = [
    "fastapi",
    "uvicorn",
    "sqlalchemy",
    "alembic",
    "redis",
    "httpx",
    "requests",
    "pydantic",
    "structlog",
    "pytest",
    "docker",
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = [
    "migrations/*",
    "alembic/versions/*",
    ".venv/*",
    "venv/*",
    "build/*",
    "dist/*",
]

# ====================================================================
# mypy Configuration - Static Type Checker
# ====================================================================
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true

# Database and async support
plugins = ["sqlalchemy.ext.mypy.plugin", "pydantic.mypy"]

# Exclude patterns
exclude = [
    "migrations/",
    "alembic/versions/",
    "build/",
    "dist/",
    ".venv/",
    "venv/",
]

# Per-module options
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "docker.*",
    "structlog.*",
    "slowapi.*",
]
ignore_missing_imports = true

# ====================================================================
# pytest Configuration - Testing Framework
# ====================================================================
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "external: Tests requiring external services",
    "docker: Tests requiring Docker containers",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "auto"

# ====================================================================
# Coverage Configuration
# ====================================================================
[tool.coverage.run]
source = ["app"]
omit = [
    "*/migrations/*",
    "*/alembic/versions/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# ====================================================================
# Bandit Configuration - Security Linter
# ====================================================================
[tool.bandit]
exclude_dirs = ["tests", "migrations", "alembic/versions"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_args in tests

# ====================================================================
# Pydantic Configuration
# ====================================================================
[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true 