# ==============================================================================
# Temperature Display App - Testing Environment Template
# ==============================================================================
# Usage: cp env.test.template .env.test
# 
# This template is optimized for automated testing with isolated test databases.
# ==============================================================================

# Application Environment
ENVIRONMENT=testing
DEBUG=true
RELOAD=false
APP_HOST=0.0.0.0
APP_PORT=8000

# Security (test-specific, not for production)
SECRET_KEY=test-secret-key-for-testing-only-32-chars-minimum
CORS_ORIGINS=http://localhost:8001,http://127.0.0.1:8001
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# Test Database (isolated test database)
DATABASE_URL=postgresql+asyncpg://postgres:test_password@test_db:5432/temperature_app_test
POSTGRES_DB=temperature_app_test
POSTGRES_USER=postgres
POSTGRES_PASSWORD=test_password
POSTGRES_HOST=test_db
POSTGRES_PORT=5432

# Database connection pool (minimal for testing)
DB_POOL_SIZE=2
DB_MAX_OVERFLOW=3
DB_POOL_TIMEOUT=10
DB_POOL_RECYCLE=300

# Test Redis Cache (isolated test cache)
REDIS_URL=redis://test_redis:6379/1
REDIS_HOST=test_redis
REDIS_PORT=6379
REDIS_DB=1
REDIS_PASSWORD=

# Redis connection pool (minimal for testing)
REDIS_POOL_SIZE=5
REDIS_POOL_TIMEOUT=2

# Mock Weather APIs (test keys)
WEATHER_API_KEY=test_openweathermap_api_key_12345
WEATHER_API_BASE_URL=https://api.openweathermap.org/data/2.5
FALLBACK_WEATHER_API_KEY=test_accuweather_api_key_12345
FALLBACK_WEATHER_API_BASE_URL=https://dataservice.accuweather.com

# Weather API settings (fast for testing)
WEATHER_API_TIMEOUT=5
WEATHER_API_RETRIES=1
WEATHER_API_RATE_LIMIT=10000

# Location Services (test configuration)
GEOLOCATION_API_KEY=test_geolocation_api_key
GEOLOCATION_API_BASE_URL=https://api.ipgeolocation.io
LOCATION_SEARCH_TIMEOUT=3
LOCATION_CACHE_TTL=300

# Caching (short TTL for testing)
CACHE_TTL=60                     # 1 minute
WEATHER_CACHE_TTL=60            # 1 minute
LOCATION_CACHE_TTL=300          # 5 minutes
USER_PREFERENCES_CACHE_TTL=180  # 3 minutes
CACHE_WARM_ON_STARTUP=false
CACHE_WARM_POPULAR_LOCATIONS=false

# Rate Limiting (disabled for testing)
API_RATE_LIMIT=10000
WEATHER_API_RATE_LIMIT=10000
LOCATION_API_RATE_LIMIT=10000
RATE_LIMIT_STORAGE=memory

# Logging (minimal for testing)
LOG_LEVEL=DEBUG
LOG_FORMAT=text
LOG_TO_FILE=false
LOG_FILE_PATH=logs/test.log
LOG_FILE_MAX_SIZE=1048576        # 1MB
LOG_FILE_BACKUP_COUNT=1
LOG_REQUEST_ID=false
LOG_USER_ID=false
LOG_CORRELATION_ID=false

# Monitoring (minimal for testing)
ENABLE_METRICS=false
METRICS_PORT=9091
METRICS_PATH=/metrics
HEALTH_CHECK_TIMEOUT=2
HEALTH_CHECK_INTERVAL=10
ENABLE_TRACING=false

# Performance (minimal for testing)
ASYNC_POOL_SIZE=10
ASYNC_TIMEOUT=15
HTTP_TIMEOUT=5
HTTP_MAX_CONNECTIONS=10
HTTP_MAX_KEEPALIVE_CONNECTIONS=5
ENABLE_BACKGROUND_TASKS=false
TASK_QUEUE_SIZE=50

# Feature Flags (testing configuration)
ENABLE_USER_REGISTRATION=true
ENABLE_LOCATION_HISTORY=true
ENABLE_WEATHER_ALERTS=true
ENABLE_PREMIUM_FEATURES=true
ENABLE_ANALYTICS=false
ENABLE_DARK_MODE=true
ENABLE_GEOLOCATION=true
ENABLE_OFFLINE_MODE=true

# Testing Tools (all enabled for testing)
ENABLE_DEBUG_TOOLBAR=false
ENABLE_ADMIN_UI=false
ENABLE_API_DOCS=true
ENABLE_TEST_ENDPOINTS=true
MOCK_EXTERNAL_APIS=true

# Test Database Settings
DEV_SEED_DATABASE=true
DEV_RESET_DATABASE=true

# Security (relaxed for testing)
SECURE_SSL_REDIRECT=false
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=false
SECURE_CONTENT_TYPE_NOSNIFF=false
SECURE_BROWSER_XSS_FILTER=false
SECURE_FRAME_DENY=false

# Performance (disabled for testing)
GZIP_COMPRESSION=false
STATIC_FILE_CACHE_CONTROL=no-cache

# Monitoring (test-specific)
SENTRY_DSN=
SENTRY_ENVIRONMENT=testing
SENTRY_SAMPLE_RATE=0.0

# Docker Resources (minimal for testing)
APP_MEMORY_LIMIT=128m
APP_CPU_LIMIT=0.25
DB_MEMORY_LIMIT=256m
DB_CPU_LIMIT=0.5
REDIS_MEMORY_LIMIT=64m
REDIS_CPU_LIMIT=0.1

# Docker Networking (test network)
DOCKER_NETWORK_SUBNET=172.22.0.0/16

# External Integrations (mocked for testing)
EMAIL_BACKEND=locmem
EMAIL_HOST=
EMAIL_PORT=587
EMAIL_USE_TLS=false
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=

# Cloud Storage (disabled for testing)
CLOUD_STORAGE_PROVIDER=
CLOUD_STORAGE_BUCKET=
CLOUD_STORAGE_REGION=
CLOUD_STORAGE_ACCESS_KEY=
CLOUD_STORAGE_SECRET_KEY=

# Analytics (disabled for testing)
GOOGLE_ANALYTICS_ID=
MIXPANEL_TOKEN=

# Backup (disabled for testing)
ENABLE_AUTO_BACKUP=false
BACKUP_SCHEDULE=
BACKUP_RETENTION_DAYS=1
BACKUP_STORAGE_PATH=./test_backups

# Maintenance
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=Test environment under maintenance

# Test-specific Configuration
API_BASE_URL=http://app:8000
TEST_DATABASE_RESET=true
TEST_CACHE_RESET=true
TEST_PARALLEL_WORKERS=1
TEST_TIMEOUT=30

# Test Data Configuration
LOAD_TEST_FIXTURES=true
TEST_USER_COUNT=10
TEST_LOCATION_COUNT=50
TEST_WEATHER_DATA_COUNT=100

# Integration Test Settings
INTEGRATION_TEST_TIMEOUT=60
INTEGRATION_TEST_RETRIES=3
INTEGRATION_TEST_DELAY=1

# Mock API Settings
MOCK_WEATHER_API=true
MOCK_GEOLOCATION_API=true
MOCK_EMAIL_SERVICE=true
MOCK_EXTERNAL_SERVICES=true

# Test Coverage Settings
COVERAGE_MINIMUM=85
COVERAGE_FAIL_UNDER=80
COVERAGE_EXCLUDE_LINES=pragma: no cover,def __repr__,raise AssertionError,raise NotImplementedError

# Pytest Configuration
PYTEST_MARKERS=unit,integration,slow,api,database,redis
PYTEST_TIMEOUT=300
PYTEST_MAX_WORKERS=auto
PYTEST_VERBOSITY=2

# ==============================================================================
# TESTING NOTES
# ==============================================================================
#
# This environment is designed for:
# ✅ Isolated test databases (separate from development)
# ✅ Fast test execution with minimal resources
# ✅ Mocked external services to avoid API calls
# ✅ Comprehensive test coverage reporting
# ✅ Integration testing with real database operations
# ✅ Parallel test execution support
# ✅ Reproducible test environments
#
# Test Execution:
#   Unit Tests:        ./docker-manage.sh test unit
#   Integration Tests: ./docker-manage.sh test integration
#   All Tests:         ./docker-manage.sh test all
#
# ============================================================================== 